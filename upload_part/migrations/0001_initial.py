# Generated by Django 3.1.7 on 2021-05-15 07:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PL_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('y_m', models.CharField(default=199901, max_length=6, verbose_name='日付')),
                ('category', models.CharField(default='カテゴリ', max_length=30, verbose_name='カテゴリー')),
                ('amountSold', models.IntegerField(blank=True, null=True, verbose_name='総売上高')),
                ('rent', models.IntegerField(blank=True, null=True, verbose_name='家賃')),
            ],
        ),
        migrations.CreateModel(
            name='UtilityCosts_ComunicationCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gasFee', models.IntegerField(blank=True, null=True, verbose_name='ガス代')),
                ('electricBill', models.IntegerField(blank=True, null=True, verbose_name='電気代')),
                ('waterBill', models.IntegerField(blank=True, null=True, verbose_name='上水道代')),
                ('sewerBill', models.IntegerField(blank=True, null=True, verbose_name='下水道')),
                ('electricSavingCost', models.IntegerField(blank=True, null=True, verbose_name='電気節電費')),
                ('electricSavingCost_lifest_arc', models.IntegerField(blank=True, null=True, verbose_name='電気節電費（LIFFST・ｱｰｸｲﾝﾀｰﾅｼｮﾅﾙ）')),
                ('electricSavingCost_lifest', models.IntegerField(blank=True, null=True, verbose_name='電気節電費（LIFFST）')),
                ('electricSavingCost_softbank', models.IntegerField(blank=True, null=True, verbose_name='電気節電費/本部ソフトバンク携帯')),
                ('waterSavingCost', models.IntegerField(blank=True, null=True, verbose_name='水道節水費')),
                ('waterSavingCost_wanaNakameguroLoan', models.IntegerField(blank=True, null=True, verbose_name='水道節水費/罠中目黒\u3000残存割賦金')),
                ('communicationCost', models.IntegerField(blank=True, null=True, verbose_name='通信費')),
                ('ubiregi', models.IntegerField(blank=True, null=True, verbose_name='ユビレジ')),
                ('usen', models.IntegerField(blank=True, null=True, verbose_name='USEN')),
                ('internetFee', models.IntegerField(blank=True, null=True, verbose_name='ネット代')),
                ('wanaNakameguroLoan', models.IntegerField(blank=True, null=True, verbose_name='罠中目黒\u3000残存割賦金')),
                ('willcom', models.IntegerField(blank=True, null=True, verbose_name='ウィルコム')),
                ('willcom_yumeyaLicenseFee', models.IntegerField(blank=True, null=True, verbose_name='ウィルコム/夢屋ライセンスフィー')),
                ('yumeyaLicenseFee', models.IntegerField(blank=True, null=True, verbose_name='夢屋ライセンスフィー')),
                ('wanaNakameguroLoan_gasFee', models.IntegerField(blank=True, null=True, verbose_name='罠中目黒\u3000残存割賦金/中目借家ガス代')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='TaxExemptExpenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insuranceFee', models.IntegerField(blank=True, null=True, verbose_name='保険料（店舗・自動車・労災・車検）')),
                ('insuranceFee2', models.IntegerField(blank=True, null=True, verbose_name='保険料（店舗・自動車・労災）')),
                ('repayment', models.IntegerField(blank=True, null=True, verbose_name='返済')),
                ('insuranceFee_fesRepayment', models.IntegerField(blank=True, null=True, verbose_name='保険料/FES返済（店舗・自動車・労災）')),
                ('repayment1', models.IntegerField(blank=True, null=True, verbose_name='①返済')),
                ('repayment2', models.IntegerField(blank=True, null=True, verbose_name='②返済')),
                ('repayment3', models.IntegerField(blank=True, null=True, verbose_name='③返済')),
                ('repayment4', models.IntegerField(blank=True, null=True, verbose_name='④返済')),
                ('prudential1', models.IntegerField(blank=True, null=True, verbose_name='①プルデンシャル')),
                ('prudential2', models.IntegerField(blank=True, null=True, verbose_name='②プルデンシャル')),
                ('creditCard_rakutensmp1', models.IntegerField(blank=True, null=True, verbose_name='①クレジットカード手数料【楽天スマぺ】')),
                ('creditCard_chibabank2', models.IntegerField(blank=True, null=True, verbose_name='②クレジットカード手数料【千葉銀行】')),
                ('taxEffect', models.IntegerField(blank=True, null=True, verbose_name='租税効果(法人税・住民税等)')),
                ('insuranceFee_store_industrialAccident', models.IntegerField(blank=True, null=True, verbose_name='保険料（店舗・労災）')),
                ('insuranceFee_car_inspection', models.IntegerField(blank=True, null=True, verbose_name='保険料（自動車・車検）')),
                ('bankruptcy_prevention', models.IntegerField(blank=True, null=True, verbose_name='倒産防止共済')),
                ('creditCard_rakuten2', models.IntegerField(blank=True, null=True, verbose_name='クレジットカード手数料【楽天スマぺ】')),
                ('creditCard_rakuten', models.IntegerField(blank=True, null=True, verbose_name='クレジットカード手数料【楽天スマぺ】本部プルデンシャル生命')),
                ('creditCard_zentoshin', models.IntegerField(blank=True, null=True, verbose_name='クレジットカード手数料【全東信】本部プルデンシャル')),
                ('creditCard_zentoshin2', models.IntegerField(blank=True, null=True, verbose_name='クレジットカード手数料【全東信】')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='OtherCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('askul', models.IntegerField(blank=True, null=True, verbose_name='アクスル')),
                ('prenty', models.IntegerField(blank=True, null=True, verbose_name='プレンティ')),
                ('expendables', models.IntegerField(blank=True, null=True, verbose_name='消耗品(本部ビバホーム)')),
                ('regiLease', models.IntegerField(blank=True, null=True, verbose_name='レジリース代')),
                ('expendables2', models.IntegerField(blank=True, null=True, verbose_name='消耗品')),
                ('other', models.IntegerField(blank=True, null=True, verbose_name='その他')),
                ('expendables3', models.IntegerField(blank=True, null=True, verbose_name='消耗費')),
                ('garbageDisposal', models.IntegerField(blank=True, null=True, verbose_name='ごみ処理費')),
                ('wetTowel_ootaki', models.IntegerField(blank=True, null=True, verbose_name='お絞り代（大滝）')),
                ('pestControl', models.IntegerField(blank=True, null=True, verbose_name='害虫駆除')),
                ('saniclean_drainagePipe', models.IntegerField(blank=True, null=True, verbose_name='サニクリーン代/排水管清掃')),
                ('dyfil', models.IntegerField(blank=True, null=True, verbose_name='ダイフィル')),
                ('altcorporation', models.IntegerField(blank=True, null=True, verbose_name='アルトコーポレーション害虫駆除/エアコンフィルター')),
                ('toyoEnterprise', models.IntegerField(blank=True, null=True, verbose_name='とよエンタープライス（設備リース）')),
                ('meetingCost', models.IntegerField(blank=True, null=True, verbose_name='会議費')),
                ('inspectionCost', models.IntegerField(blank=True, null=True, verbose_name='他店視察費')),
                ('entertainmentFee', models.IntegerField(blank=True, null=True, verbose_name='接待交際費')),
                ('welfare', models.IntegerField(blank=True, null=True, verbose_name='福利厚生費')),
                ('capitalInvestment', models.IntegerField(blank=True, null=True, verbose_name='設備投資(備品、修理等、その他)')),
                ('housingAllowance', models.IntegerField(blank=True, null=True, verbose_name='住宅手当')),
                ('companyHousingAllowance', models.IntegerField(blank=True, null=True, verbose_name='社宅手当')),
                ('parkingLot', models.IntegerField(blank=True, null=True, verbose_name='駐車場代')),
                ('vehicleCost', models.IntegerField(blank=True, null=True, verbose_name='車両費')),
                ('labor_and_social_security_attorney', models.IntegerField(blank=True, null=True, verbose_name='労務士報酬')),
                ('tax_accountant', models.IntegerField(blank=True, null=True, verbose_name='税理士報酬')),
                ('update2', models.IntegerField(blank=True, null=True, verbose_name='家賃\u3000更新代')),
                ('update', models.IntegerField(blank=True, null=True, verbose_name='家賃\u3000更新代 補償金')),
                ('subsidy', models.IntegerField(blank=True, null=True, verbose_name='補助金')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='LaborCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labor_costs', models.IntegerField(blank=True, null=True, verbose_name='人件費')),
                ('employee_costs', models.IntegerField(blank=True, null=True, verbose_name='社員人件費')),
                ('partTimeWorker_costs', models.IntegerField(blank=True, null=True, verbose_name='アルバイト人件費')),
                ('company_insurance_total', models.IntegerField(blank=True, null=True, verbose_name='社保合計')),
                ('other_ex_dailyPayment', models.IntegerField(blank=True, null=True, verbose_name='その他（日払い等）')),
                ('other_ex_dailyPayment2', models.IntegerField(blank=True, null=True, verbose_name='賞与社保合計/その他（日払い等）')),
                ('bonus', models.IntegerField(blank=True, null=True, verbose_name='賞与')),
                ('transportationExpenses', models.IntegerField(blank=True, null=True, verbose_name='交通費')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='FoodCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_purchase_food', models.IntegerField(blank=True, null=True, verbose_name='現金仕入れ(フード)')),
                ('ryque', models.IntegerField(blank=True, null=True, verbose_name='リクエ')),
                ('ryqueFood', models.IntegerField(blank=True, null=True, verbose_name='リクエ(フード)')),
                ('kitani_yumeya', models.IntegerField(blank=True, null=True, verbose_name='キタニ水産/夢屋')),
                ('kitani', models.IntegerField(blank=True, null=True, verbose_name='キタニ水産')),
                ('metroFood', models.IntegerField(blank=True, null=True, verbose_name='メトロ(フード)')),
                ('metro', models.IntegerField(blank=True, null=True, verbose_name='メトロ')),
                ('heiwameat', models.IntegerField(blank=True, null=True, verbose_name='平和ミート')),
                ('heiwameat_kyoutan', models.IntegerField(blank=True, null=True, verbose_name='平和ミート/京丹味噌（有）片山商店')),
                ('heiwameat_wanahakyoutan', models.IntegerField(blank=True, null=True, verbose_name='平和ミート/罠は京丹味噌（有）片山商店')),
                ('heiwameat_wanahakyoutan2', models.IntegerField(blank=True, null=True, verbose_name='平和ミート/罠・京丹味噌（有）片山商店')),
                ('takanashiFood', models.IntegerField(blank=True, null=True, verbose_name='タカナシ(フード)')),
                ('sunnyProducts', models.IntegerField(blank=True, null=True, verbose_name='サニープロダクツ')),
                ('wakita_nouto', models.IntegerField(blank=True, null=True, verbose_name='和喜多/5月分からノウト')),
                ('nouto', models.IntegerField(blank=True, null=True, verbose_name='ノウト')),
                ('ryokyoryutsu_gogocurry', models.IntegerField(blank=True, null=True, verbose_name='猟協流通/ゴーゴーカレー')),
                ('gogocurry', models.IntegerField(blank=True, null=True, verbose_name='ゴーゴーカレー')),
                ('precoVegetables_yaotora', models.IntegerField(blank=True, null=True, verbose_name='プレコフーズ(野菜)/八百虎・カネマン')),
                ('precoVegetables_kaneman_daiyu', models.IntegerField(blank=True, null=True, verbose_name='プレコフーズ(野菜)/カネマン・ダイユウ')),
                ('preco_chacoal', models.IntegerField(blank=True, null=True, verbose_name='プレコフーズ/廣備（炭）')),
                ('yaotora', models.IntegerField(blank=True, null=True, verbose_name='八百虎')),
                ('begetarianButcher_nishihara', models.IntegerField(blank=True, null=True, verbose_name='ベジタリアンブッチャー/西原商会')),
                ('nishihara', models.IntegerField(blank=True, null=True, verbose_name='西原商会')),
                ('nishiharaFood', models.IntegerField(blank=True, null=True, verbose_name='西原商会(フード)')),
                ('maruyasu_sunnyProducts_toho', models.IntegerField(blank=True, null=True, verbose_name='マルヤス/サニープロダクツ(フード)/トーホーフード')),
                ('toho', models.IntegerField(blank=True, null=True, verbose_name='トーホー')),
                ('tohoFood', models.IntegerField(blank=True, null=True, verbose_name='トーホーフード')),
                ('precoMeat', models.IntegerField(blank=True, null=True, verbose_name='プレコフーズ（肉）')),
                ('hirano_wanaYumeya', models.IntegerField(blank=True, null=True, verbose_name='平野農園/罠\u3000夢屋')),
                ('sanwaroland_wanaYumeya', models.IntegerField(blank=True, null=True, verbose_name='サンワローラン/罠\u3000夢屋')),
                ('marudai', models.IntegerField(blank=True, null=True, verbose_name='丸大フード')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='DrinkCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kakuyasuDrink', models.IntegerField(blank=True, null=True, verbose_name='カクヤス(ドリンク)')),
                ('izumiyaDrink', models.IntegerField(blank=True, null=True, verbose_name='いずみや（ドリンク）')),
                ('nestle', models.IntegerField(blank=True, null=True, verbose_name='ネスレ')),
                ('yatsuya', models.IntegerField(blank=True, null=True, verbose_name='やつや')),
                ('yatsuya_jenos', models.IntegerField(blank=True, null=True, verbose_name='やつや/ジェノス')),
                ('yatsuya_jenos2', models.IntegerField(blank=True, null=True, verbose_name='やつや/中目罠ジェノス')),
                ('altcorporationWine', models.IntegerField(blank=True, null=True, verbose_name='ｱﾙﾄｺｰﾎﾟﾚｰｼｮﾝ（ワイン）')),
                ('pieroth', models.IntegerField(blank=True, null=True, verbose_name='ピーロートジャパン')),
                ('hashimoto', models.IntegerField(blank=True, null=True, verbose_name='酒のはしもと')),
                ('drinkOther', models.IntegerField(blank=True, null=True, verbose_name='その他(ドリンク)')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
        migrations.CreateModel(
            name='AdvertisingCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertisingGurunabi', models.IntegerField(blank=True, null=True, verbose_name='広告費（ぐるなび）')),
                ('Gurunabi', models.IntegerField(blank=True, null=True, verbose_name='ぐるなび')),
                ('advertisingHotpepper', models.IntegerField(blank=True, null=True, verbose_name='広告費（ＨＰ）')),
                ('Hotpepper', models.IntegerField(blank=True, null=True, verbose_name='ホットペッパー')),
                ('advertisingTabelog', models.IntegerField(blank=True, null=True, verbose_name='食べログ(SGS)')),
                ('Tabelog', models.IntegerField(blank=True, null=True, verbose_name='食べログ')),
                ('tLab', models.IntegerField(blank=True, null=True, verbose_name='広告費（ぐるなび更新ティーラボ）')),
                ('hitosara_gururiza', models.IntegerField(blank=True, null=True, verbose_name='ヒトサラ/ぐるりざ（10月～）')),
                ('roi_recoruHeadquarters', models.IntegerField(blank=True, null=True, verbose_name='ROI（ファンくる・ぐるりざ）・本部レコル')),
                ('retty', models.IntegerField(blank=True, null=True, verbose_name='レッティー')),
                ('fesMaipure_recoru', models.IntegerField(blank=True, null=True, verbose_name='FESまいぷれ/本部レコル')),
                ('maipure', models.IntegerField(blank=True, null=True, verbose_name='まいぷれ')),
                ('externalSalesCost_googleAds', models.IntegerField(blank=True, null=True, verbose_name='外販委託料/グーグル広告')),
                ('externalSalesCost', models.IntegerField(blank=True, null=True, verbose_name='外販委託料')),
                ('googleAds', models.IntegerField(blank=True, null=True, verbose_name='グーグル広告')),
                ('jobAds', models.IntegerField(blank=True, null=True, verbose_name='求人広告費')),
                ('pl_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload_part.pl_data')),
            ],
        ),
    ]
